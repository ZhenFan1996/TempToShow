// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlattformChallenge.Models;

namespace PlattformChallenge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201215184710_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlattformChallenge.Models.Challenge", b =>
                {
                    b.Property<int>("C_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Best_Solution")
                        .HasColumnType("int");

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.Property<int>("Com_ID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Max_Participant")
                        .HasColumnType("int");

                    b.Property<DateTime>("Release_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Winner")
                        .HasColumnType("int");

                    b.HasKey("C_Id");

                    b.HasIndex("Com_ID");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("PlattformChallenge.Models.Language", b =>
                {
                    b.Property<int>("Language_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DevelopmentLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Language_Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("PlattformChallenge.Models.LanguageChallenge", b =>
                {
                    b.Property<int>("Language_Id")
                        .HasColumnType("int");

                    b.Property<int>("C_Id")
                        .HasColumnType("int");

                    b.HasKey("Language_Id", "C_Id");

                    b.HasIndex("C_Id");

                    b.ToTable("LanguageChallenge");
                });

            modelBuilder.Entity("PlattformChallenge.Models.Participation", b =>
                {
                    b.Property<int>("C_Id")
                        .HasColumnType("int");

                    b.Property<int>("P_Id")
                        .HasColumnType("int");

                    b.Property<int>("S_Id")
                        .HasColumnType("int");

                    b.HasKey("C_Id", "P_Id");

                    b.HasIndex("P_Id");

                    b.HasIndex("S_Id")
                        .IsUnique();

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("PlattformChallenge.Models.Solution", b =>
                {
                    b.Property<int>("S_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Submit_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("S_Id");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("PlattformChallenge.Models.UserAccount", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountTyp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("UserAccounts");

                    b.HasDiscriminator<string>("AccountTyp").HasValue("None");
                });

            modelBuilder.Entity("PlattformChallenge.Models.Company", b =>
                {
                    b.HasBaseType("PlattformChallenge.Models.UserAccount");

                    b.Property<bool>("IsActiv")
                        .HasColumnType("bit");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Company");
                });

            modelBuilder.Entity("PlattformChallenge.Models.Programmer", b =>
                {
                    b.HasBaseType("PlattformChallenge.Models.UserAccount");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Programmer");
                });

            modelBuilder.Entity("PlattformChallenge.Models.Challenge", b =>
                {
                    b.HasOne("PlattformChallenge.Models.Company", "Company")
                        .WithMany("Challenges")
                        .HasForeignKey("Com_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlattformChallenge.Models.LanguageChallenge", b =>
                {
                    b.HasOne("PlattformChallenge.Models.Challenge", "Challenge")
                        .WithMany("LanguageChallenges")
                        .HasForeignKey("C_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlattformChallenge.Models.Language", "Language")
                        .WithMany("LanguageChallenges")
                        .HasForeignKey("Language_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlattformChallenge.Models.Participation", b =>
                {
                    b.HasOne("PlattformChallenge.Models.Challenge", "Challenge")
                        .WithMany("Participations")
                        .HasForeignKey("C_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlattformChallenge.Models.Programmer", "Programmer")
                        .WithMany("Participations")
                        .HasForeignKey("P_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlattformChallenge.Models.Solution", "Solution")
                        .WithOne("Participation")
                        .HasForeignKey("PlattformChallenge.Models.Participation", "S_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
