@model ErrorViewModel
@inject IViewLocalizer Localizer
@{
    ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">@Localizer["An error occurred while processing your request"].</h2>

@if (Model.ShowRequestId)
{
    <p>
        @*<strong>Request ID:</strong> <code>@Model.RequestId</code>*@
        <strong>Reason:</strong> <code>@Model.RequestId</code>
    </p>
}

<p>
    @Html.ActionLink("Click here go back to homepage.", "Index", "Home")
</p>

<div>
    @if (ViewContext.HttpContext.User.IsInRole("Company"))
    {
        <div class="btn-group btn-group-justified">    <a asp-controller="Company" asp-action="Index" class="btn btn-primary ">Go To My portal</a></div>
    }
</div>

<div>
    @if (ViewContext.HttpContext.User.IsInRole("Programmer"))
    {
        <div class="btn-group btn-group-justified">    <a asp-controller="Programmer" asp-action="Index" class="btn btn-primary ">Go To My portal</a></div>
    }
</div>

@*<h3>Development Mode</h3>
    <p>
        Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
    </p>
    <p>
        <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
        It can result in displaying sensitive information from exceptions to end users.
        For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
        and restarting the app.
    </p>*@
