@model PlattformChallenge.ViewModels.ChallengeDetailViewModel
 @using Microsoft.AspNetCore.Localization;
    @inject IViewLocalizer Localizer
    @{
        ViewData["Title"] = @Localizer["Details"];
    }

@{ ViewData["Title"] = @Localizer["Details"]; }


    <head>
        <title>@Localizer["Details"]</title>
    </head>
    @if (!ViewContext.HttpContext.User.IsInRole("Programmer") && !ViewContext.HttpContext.User.IsInRole("Company"))
    {
        <div class="alert alert-success alert-dismissable ">
            <p><font size="4" face="arial" color="red">** @Localizer["RegInfo"] **</font></p>
        </div>
    }
    <h1 class="row">@Localizer["ChallengeDetails"] </h1>
    <div>
        <dl class="row">
            <dt class="col-sm-2">
                @Localizer["Title"]
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt class="col-sm-2 ">
                @Localizer["Discription"]
            </dt>
            <dd class="col-sm-10">
                @Html.Raw(Model.Content)
            </dd>
            <dt class="col-sm-2">
                @Localizer["Prize"]
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Bonus)
            </dd>
            <dt class="col-sm-2">
                @Localizer["ReleaseDate"]
            </dt>
            <dd class="col-sm-10" id="release">
            </dd>
            <dt class="col-sm-2">
                @Localizer["Deadline"]
            </dt>
            <dd class="col-sm-10">
                <div id="deadline"></div>
            </dd>
            <dt class="col-sm-2">
                @Localizer["MaxParticipants"]
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Max_Participant)
            </dd>
            <dt class="col-sm-2">
                @Localizer["AvailableQuota"]
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Available_Quota)
            </dd>
            <dt class="col-sm-2">
                @Localizer["Company"]
            </dt>
            <dd class="col-sm-10">
                @*@Html.DisplayFor(model => model.Company.Name)*@
                <a asp-controller="Company" asp-action="Profile" asp-route-c_id="@Model.Com_ID">@Html.DisplayFor(model => model.Company.Name)</a>
            </dd>

            <dt class="col-sm-2">
                @Localizer["DevLanguage"]
            </dt>
            <dd class="col-sm-10">
                @for (int i = 0; i < Model.Languages.Count; i++)
                {
                    if (i < Model.Languages.Count - 1)
                    {
                        <span>  @Model.Languages.ElementAt(i).DevelopmentLanguage , </span>
                    }
                    else
                    {
                        <span>  @Model.Languages.ElementAt(i).DevelopmentLanguage </span>
                    }
                }
            </dd>
            <dt class="col-sm-2">
                @Localizer["WillSolutionOpen"]
            </dt>
            <dd class="col-sm-10">
                @if (Model.IsSolutionOpen)
                {
                    @Localizer["Yes"]
                }
                else
                {
                    @Localizer["No"]
                }
            </dd>

            <dt class="col-sm-2">
                @Localizer["WinnerAndSolution"]
            </dt>
            <dd class="col-sm-10">
                <a asp-controller="Solution" asp-action="List" asp-route-c_Id="@Model.C_Id"> @Localizer["View"] </a>
            </dd>
        </dl>
    </div>




    <div class="container">
        <div class="row">

            @if (ViewContext.HttpContext.User.IsInRole("Programmer") && Model.CanTakePartIn)

                if (Model.Available_Quota > 0)
                {
                    <div class="col-md-2">
                        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#p">
                            @Localizer["TakePartIn"]
                        </button>

                        <div class="modal fade" id="p" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel"> @Localizer["ConfirmCondition"]   </h5>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body">
                                        @Localizer["ParticipationCondition"]
                                    </div>
                                    <div class="modal-footer">
                                        <a asp-action="ParticipateChallenge" asp-route-id="@Model.C_Id" class="btn btn-primary">@Localizer["Agree"]</a>
                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">@Localizer["Disagree"]</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-danger ">  @Localizer["NoPlace"]</div>
                }

            <div class="col-md-4">    <a asp-action="Index" class="btn btn-primary ">@Localizer["AllChallengeList"]</a></div>

            <div>
                @if (ViewContext.HttpContext.User.IsInRole("Company"))
                {
                    <div class="btn-group btn-group-justified">    <a asp-controller="Company" asp-action="Index" class="btn btn-primary ">@Localizer["GoToMyPortal"]</a></div>
                }
            </div>
        </div>

        <div class="row mt-3">
            <button type="button" class="btn btn-info off-set-2" data-toggle="modal" data-target="#share">
                Share
            </button>

            <!-- Modal -->
            <div class="modal fade" id="share" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content  " style="width:350px">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalLabel">Share Challenge</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="row mt-2">
                                <div class="sharethis-inline-share-buttons md-4  col-md-8"></div>
                                <input class="btn btn-info offset-md-1 col-md-3" type="button" value="@Localizer["Copy URL"]" onclick="Copy();" />
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

@{

    var rqf =Context.Features.Get<IRequestCultureFeature>();
    var culture = rqf.RequestCulture.Culture;
}


    @section Scripts{
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script type="text/javascript" src="https://platform-api.sharethis.com/js/sharethis.js#property=6034eae6b772eb001285a6fd&product=inline-share-buttons" async="async"></script>
        <script type="text/javascript">
    function Copy() {
        var inputc = document.body.appendChild(document.createElement("input"));
        inputc.value = window.location.href;
        inputc.focus();
        inputc.select();
        document.execCommand('copy');
        inputc.parentNode.removeChild(inputc);
         var msg = '@Html.Raw(Localizer["Copy successfully!"].Value.ToString())';
         alert(msg);
    }
        $(document).ready(function () {

            var isEn = "@culture.Name" == "en";

            var re = moment('@Model.Release_Date');
            var deadline = moment('@Model.Deadline');
            if (!isEn) {
                re = moment('@Model.Release_Date', "DD.MM.YYYY HH:mm:ss", true);
                deadline = moment('@Model.Deadline', "DD.MM.YYYY HH:mm:ss", true);
            }

            re = moment.tz(re.format("MM/DD/YYYY HH:mm:ss"), moment.tz.guess()).format("YYYY/MM/DD HH:mm");
            deadline = moment.tz(deadline.format("MM/DD/YYYY HH:mm:ss"), moment.tz.guess()).format("YYYY/MM/DD HH:mm");
            $('#release').html(re);
            $('#deadline').html(deadline);
        })

        </script>


    }

