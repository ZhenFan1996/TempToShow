@using PlattformChallenge.Core.Model
@model PaginatedList<Challenge>
@*@model PlattformChallenge.ViewModels.ChallengeCreateViewModel*@
@{
    ViewData["Title"] = "Current Challenges";
}

<h1>Current Challenges</h1>
@if (ViewContext.HttpContext.User.IsInRole("Company"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

@{ViewBag.Title = "Regitser";}
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by title: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>

    <div class="form-actions no-color">
        <p>
            Language:
            <input type="checkbox" name="SearchString" value="@ViewData["CurrentFilter"]" />Java
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>




<table class="table">
    <thead>
        <tr>

            <th>
                Title
                @*@Html.DisplayNameFor(model => model.Title)*@
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["BonusSortParm"]">Bonus</a>
            </th>
            <th>
                Company
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["QuotaSortParm"]">Quota</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>

                <td>
                    <a asp-controller="Challenges" asp-action="Details" asp-route-id="@item.C_Id"> @Html.DisplayFor(modelItem => item.Title) </a>
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.Content)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Bonus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Release_Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Max_Participant)
                </td>

                @*<td>
                        @Html.DisplayFor(modelItem => item.Winner_Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Best_Solution_Id)
                    </td>*@
                @*<td>
                        <a asp-action="Edit" asp-route-id="@item.C_Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.C_Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.C_Id">Delete</a>
                    </td>*@
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
